from sklearn.ensemble import GradientBoostingClassifier
from sklearn.model_selection import train_test_split
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

breast_cancer = pd.read_csv('wisc_bc_data.csv')
del breast_cancer['id']

X_train, X_test, y_train, y_test = train_test_split(breast_cancer.loc[:, breast_cancer.columns != 'diagnosis'],
                                                    breast_cancer['diagnosis'], stratify=breast_cancer['diagnosis'], random_state=66)
boosting = GradientBoostingClassifier()
boosting.fit(X_train, y_train)

max_boosting = GradientBoostingClassifier(max_depth=1)
max_boosting.fit(X_train, y_train)

print(f"Gradient boosting training set accuracy: {format(max_boosting.score(X_train, y_train), '.4f')} ")
print(f"Gradient boosting testing set accuracy: {format(max_boosting.score(X_test, y_test), '.4f')} ")
breast_cancer_features = [x for i,x in enumerate(breast_cancer.columns) if i!=30]

def breast_cancer_feature_importances_plot(model):
    plt.figure(figsize=(10,5))
    n_features = 30
    plt.barh(range(n_features), model.feature_importances_, align='center', color=['#FF1493'])
    plt.yticks(np.arange(n_features), breast_cancer_features)
    plt.title('Breast Cancer Gradient Boosting Features Importances')
    plt.xlabel("Feature Importance")
    plt.ylabel("Feature")
    plt.ylim(-1, n_features)
    
breast_cancer_feature_importances_plot(max_boosting)
plt.show()
